{
    "rules": {

        /**
         * jsdoc
         * @description: rules for the eslint plugin jsdoc
         * @see: https://github.com/gajus/eslint-plugin-jsdoc
         */

        "jsdoc/check-access": "warn",                                                                   // recommended
        "jsdoc/check-alignment": "warn",                                                                // recommended
        // "jsdoc/check-examples": "warn",
        "jsdoc/check-indentation": "warn",
        // "jsdoc/check-line-alignment": "warn",
        "jsdoc/check-param-names": "warn",                                                              // recommended
        // "jsdoc/check-property-names": "warn",                                                        // recommended
        // "jsdoc/check-syntax": "warn",
        "jsdoc/check-tag-names": "warn",                                                                // recommended
        // "jsdoc/check-types": "warn",                                                                 // recommended
        // "jsdoc/check-values": "warn",                                                                // recommended
        "jsdoc/empty-tags": "warn",                                                                     // recommended
        // "jsdoc/implements-on-classes": "warn",                                                       // recommended
        // "jsdoc/informative-docs": "warn",
        // "jsdoc/match-description": "warn",
        // "jsdoc/match-name": "warn",
        "jsdoc/multiline-blocks": "warn",                                                               // recommended
        // "jsdoc/no-bad-blocks": "warn",
        "jsdoc/no-blank-block-descriptions": "warn",
        "jsdoc/no-blank-blocks": "warn",
        // "jsdoc/no-defaults": "warn",                                                                 // recommended
        // "jsdoc/no-missing-syntax": "warn",
        "jsdoc/no-multi-asterisks": "warn",                                                             // recommended
        // "jsdoc/no-restricted-syntax": "warn",
        "jsdoc/no-types": "warn",
        // "jsdoc/no-undefined-types": "warn",                                                          // recommended
        "jsdoc/require-asterisk-prefix": "warn",
        "jsdoc/require-description": "warn",
        // "jsdoc/require-description-complete-sentence": "warn",
        // "jsdoc/require-example": "warn",
        // "jsdoc/require-file-overview": "warn",
        // "jsdoc/require-hyphen-before-param-description": "warn",
        // "jsdoc/require-jsdoc": "warn",                                                               // recommended
        // "jsdoc/require-param": "warn",                                                               // recommended
        "jsdoc/require-param-description": "warn",                                                      // recommended
        // "jsdoc/require-param-name": "warn",                                                          // recommended
        // "jsdoc/require-param-type": "warn",                                                          // recommended
        // "jsdoc/require-property": "warn",                                                            // recommended
        // "jsdoc/require-property-description": "warn",                                                // recommended
        // "jsdoc/require-property-name": "warn",                                                       // recommended
        // "jsdoc/require-property-type": "warn",                                                       // recommended
        // "jsdoc/require-returns": "warn",                                                             // recommended
        // "jsdoc/require-returns-check": "warn",                                                       // recommended
        "jsdoc/require-returns-description": "warn",                                                    // recommended
        // "jsdoc/require-returns-type": "warn",                                                        // recommended
        // "jsdoc/require-throws": "warn",
        // "jsdoc/require-yields": "warn",                                                              // recommended
        // "jsdoc/require-yields-check": "warn",                                                        // recommended
        "jsdoc/sort-tags": "warn",
        "jsdoc/tag-lines": ["warn", "any", {"startLines": 1}],                                          // recommended
        // "jsdoc/text-escaping": "warn",
        // "jsdoc/valid-types": "warn",                                                                 // recommended

        /**
         * typescript
         * @description: rules for typescript
         * @see: https://typescript-eslint.io/rules/#supported-rules
         */

        "@typescript-eslint/adjacent-overload-signatures": "warn",
        "@typescript-eslint/array-type": "warn",
        "@typescript-eslint/await-thenable": "error",                                                   // recommended
        "@typescript-eslint/ban-ts-comment": "error",                                                   // recommended
        "@typescript-eslint/ban-tslint-comment": "error",
        "@typescript-eslint/ban-types": ["error", {"types": {"object": false}}],                        // recommended
        "@typescript-eslint/class-literal-property-style": "warn",
        "@typescript-eslint/consistent-generic-constructors": "warn",
        "@typescript-eslint/consistent-indexed-object-style": "warn",
        "@typescript-eslint/consistent-type-assertions": "warn",
        "@typescript-eslint/consistent-type-definitions": "warn",
        "@typescript-eslint/consistent-type-exports": "warn",
        "@typescript-eslint/consistent-type-imports": "warn",
        "@typescript-eslint/explicit-function-return-type": "warn",
        "@typescript-eslint/explicit-member-accessibility": ["warn", {"accessibility": "no-public"}],
        "@typescript-eslint/explicit-module-boundary-types": "error",
        "@typescript-eslint/member-delimiter-style": "warn",
        // "@typescript-eslint/member-ordering": "warn",
        "@typescript-eslint/method-signature-style": "warn",
        // "@typescript-eslint/naming-convention": "warn",
        "@typescript-eslint/no-base-to-string": "warn",                                                 // recommended
        "@typescript-eslint/no-confusing-non-null-assertion": "warn",
        "@typescript-eslint/no-confusing-void-expression": ["warn", {"ignoreArrowShorthand": true}],
        "@typescript-eslint/no-duplicate-enum-values": "warn",                                          // recommended
        "@typescript-eslint/no-duplicate-type-constituents": "warn",                                    // recommended
        "@typescript-eslint/no-dynamic-delete": "warn",
        "@typescript-eslint/no-empty-interface": "error",
        // "@typescript-eslint/no-explicit-any": "error",                                               // recommended
        "@typescript-eslint/no-extra-non-null-assertion": "error",                                      // recommended
        "@typescript-eslint/no-extraneous-class": "warn",
        "@typescript-eslint/no-floating-promises": "error",                                             // recommended
        "@typescript-eslint/no-for-in-array": "error",                                                  // recommended
        "@typescript-eslint/no-import-type-side-effects": "warn",
        "@typescript-eslint/no-inferrable-types": "warn",
        "@typescript-eslint/no-invalid-void-type": "warn",
        "@typescript-eslint/no-meaningless-void-operator": "warn",
        "@typescript-eslint/no-misused-new": "error",                                                   // recommended
        "@typescript-eslint/no-misused-promises": "error",                                              // recommended
        "@typescript-eslint/no-mixed-enums": "warn",
        "@typescript-eslint/no-namespace": "error",                                                     // recommended
        "@typescript-eslint/no-non-null-asserted-nullish-coalescing": "warn",
        "@typescript-eslint/no-non-null-asserted-optional-chain": "error",                              // recommended
        "@typescript-eslint/no-non-null-assertion": "error",
        "@typescript-eslint/no-redundant-type-constituents": "warn",                                    // recommended
        "@typescript-eslint/no-require-imports": "warn",
        "@typescript-eslint/no-this-alias": "error",                                                    // recommended
        // "@typescript-eslint/no-type-alias": "warn",
        "@typescript-eslint/no-unnecessary-boolean-literal-compare": "warn",
        "@typescript-eslint/no-unnecessary-condition": "warn",
        "@typescript-eslint/no-unnecessary-qualifier": "warn",
        "@typescript-eslint/no-unnecessary-type-arguments": "warn",
        "@typescript-eslint/no-unnecessary-type-assertion": "error",                                    // recommended
        "@typescript-eslint/no-unnecessary-type-constraint": "error",                                   // recommended
        // "@typescript-eslint/no-unsafe-argument": "error",                                            // recommended
        // "@typescript-eslint/no-unsafe-assignment": "error",                                          // recommended
        // "@typescript-eslint/no-unsafe-call": "error",                                                // recommended
        "@typescript-eslint/no-unsafe-declaration-merging": "error",                                    // recommended
        "@typescript-eslint/no-unsafe-enum-comparison": "error",                                        // recommended
        // "@typescript-eslint/no-unsafe-member-access": "error",                                       // recommended
        // "@typescript-eslint/no-unsafe-return": "error",                                              // recommended
        "@typescript-eslint/no-useless-empty-export": "warn",
        "@typescript-eslint/no-var-requires": "error",                                                  // recommended
        "@typescript-eslint/non-nullable-type-assertion-style": "warn",
        "@typescript-eslint/parameter-properties": ["warn", {"prefer": "parameter-property"}],
        "@typescript-eslint/prefer-as-const": "error",                                                  // recommended
        "@typescript-eslint/prefer-enum-initializers": "warn",
        "@typescript-eslint/prefer-for-of": "warn",
        "@typescript-eslint/prefer-function-type": "warn",
        "@typescript-eslint/prefer-includes": "warn",
        "@typescript-eslint/prefer-literal-enum-member": "warn",
        "@typescript-eslint/prefer-namespace-keyword": "error",
        "@typescript-eslint/prefer-nullish-coalescing": "warn",
        "@typescript-eslint/prefer-optional-chain": "warn",
        "@typescript-eslint/prefer-readonly": "warn",
        // "@typescript-eslint/prefer-readonly-parameter-types": "warn",
        "@typescript-eslint/prefer-reduce-type-parameter": "warn",
        "@typescript-eslint/prefer-regexp-exec": "warn",
        "@typescript-eslint/prefer-return-this-type": "warn",
        "@typescript-eslint/prefer-string-starts-ends-with": "warn",
        "@typescript-eslint/prefer-ts-expect-error": "warn",
        "@typescript-eslint/promise-function-async": "warn",
        "@typescript-eslint/require-array-sort-compare": "warn",
        // "@typescript-eslint/restrict-plus-operands": "error",                                        // recommended
        // "@typescript-eslint/restrict-template-expressions": "error",                                 // recommended
        // "@typescript-eslint/sort-type-constituents": "warn",
        "@typescript-eslint/strict-boolean-expressions": "warn",
        "@typescript-eslint/switch-exhaustiveness-check": "warn",
        "@typescript-eslint/triple-slash-reference": "error",                                           // recommended
        "@typescript-eslint/type-annotation-spacing": "warn",
        // "@typescript-eslint/typedef": "warn",
        "@typescript-eslint/unbound-method": ["error", {"ignoreStatic": true}],                         // recommended
        "@typescript-eslint/unified-signatures": "warn",

        /**
         * typescript
         * @description: rules for typescript as extensions of existing eslint rules
         * @see: https://typescript-eslint.io/rules/#extension-rules
         */

        "@typescript-eslint/block-spacing": "warn",
        "@typescript-eslint/brace-style": "warn",
        // "@typescript-eslint/class-methods-use-this": "warn",
        "@typescript-eslint/comma-dangle": "warn",
        "@typescript-eslint/comma-spacing": "warn",
        "@typescript-eslint/default-param-last": "error",
        "@typescript-eslint/dot-notation": ["error", {"allowIndexSignaturePropertyAccess": true}],
        "@typescript-eslint/func-call-spacing": "warn",
        // "@typescript-eslint/indent": "warn",
        // "@typescript-eslint/init-declarations": "warn",
        "@typescript-eslint/key-spacing": "warn",
        "@typescript-eslint/keyword-spacing": "warn",
        // "@typescript-eslint/lines-around-comment": "warn",
        // "@typescript-eslint/lines-between-class-members": "warn",
        "@typescript-eslint/no-array-constructor": "error",                                             // recommended
        "@typescript-eslint/no-dupe-class-members": "warn",
        // "@typescript-eslint/no-empty-function": "error",
        // "@typescript-eslint/no-extra-parens": "warn",
        "@typescript-eslint/no-extra-semi": "error",
        "@typescript-eslint/no-implied-eval": "error",                                                  // recommended
        "@typescript-eslint/no-invalid-this": "warn",
        "@typescript-eslint/no-loop-func": "warn",
        "@typescript-eslint/no-loss-of-precision": "error",                                             // recommended
        // "@typescript-eslint/no-magic-numbers": "warn",
        "@typescript-eslint/no-redeclare": "warn",
        // "@typescript-eslint/no-restricted-imports": ["error", "forbidden"],
        "@typescript-eslint/no-shadow": "warn",
        "@typescript-eslint/no-throw-literal": "warn",
        "@typescript-eslint/no-unused-expressions": "warn",
        "@typescript-eslint/no-unused-vars": ["warn", {"args": "none"}],                                // recommended
        "@typescript-eslint/no-use-before-define": "warn",
        "@typescript-eslint/no-useless-constructor": "warn",
        // "@typescript-eslint/object-curly-spacing": "warn",
        // "@typescript-eslint/padding-line-between-statements": "warn",
        "@typescript-eslint/quotes": ["warn", "single"],
        "@typescript-eslint/require-await": "error",                                                    // recommended
        "@typescript-eslint/return-await": "error",
        "@typescript-eslint/semi": "warn",
        "@typescript-eslint/space-before-blocks": "warn",
        "@typescript-eslint/space-before-function-paren": ["warn", "never"],
        "@typescript-eslint/space-infix-ops": "warn",

        /**
         * eslint
         * @description: rules related to possible logic errors
         * @see: https://eslint.org/docs/latest/rules/#possible-problems
         */

        "array-callback-return": "error",
        "constructor-super": "error",                                                                   // recommended
        "for-direction": "error",                                                                       // recommended
        "getter-return": "error",                                                                       // recommended
        "no-async-promise-executor": "error",                                                           // recommended
        "no-await-in-loop": "warn",
        "no-class-assign": "error",                                                                     // recommended
        "no-compare-neg-zero": "error",                                                                 // recommended
        "no-cond-assign": "error",                                                                      // recommended
        "no-const-assign": "error",                                                                     // recommended
        "no-constant-binary-expression": "warn",
        "no-constant-condition": "error",                                                               // recommended
        "no-constructor-return": "error",
        "no-control-regex": "error",                                                                    // recommended
        "no-debugger": "error",                                                                         // recommended
        "no-dupe-args": "error",                                                                        // recommended
        // "no-dupe-class-members": "warn", EXTENDED                                                    // recommended
        "no-dupe-else-if": "error",                                                                     // recommended
        "no-dupe-keys": "error",                                                                        // recommended
        "no-duplicate-case": "error",                                                                   // recommended
        // "no-duplicate-imports": "warn", EXTENDED
        "no-empty-character-class": "error",                                                            // recommended
        "no-empty-pattern": ["error", {"allowObjectPatternsAsParameters": true}],                       // recommended
        "no-ex-assign": "error",                                                                        // recommended
        "no-fallthrough": "warn",                                                                       // recommended
        "no-func-assign": "error",                                                                      // recommended
        "no-import-assign": "error",                                                                    // recommended
        "no-inner-declarations": "error",                                                               // recommended
        "no-invalid-regexp": "error",                                                                   // recommended
        "no-irregular-whitespace": "error",                                                             // recommended
        // "no-loss-of-precision": "error", EXTENDED                                                    // recommended
        "no-misleading-character-class": "error",                                                       // recommended
        "no-new-native-nonconstructor": "error",
        "no-new-symbol": "error",                                                                       // recommended
        "no-obj-calls": "error",                                                                        // recommended
        "no-promise-executor-return": ["error", {"allowVoid": true}],
        "no-prototype-builtins": "error",                                                               // recommended
        "no-self-assign": "error",                                                                      // recommended
        "no-self-compare": "error",
        "no-setter-return": "error",                                                                    // recommended
        "no-sparse-arrays": "error",                                                                    // recommended
        "no-template-curly-in-string": "warn",
        "no-this-before-super": "error",                                                                // recommended
        "no-undef": "error",                                                                            // recommended
        "no-unexpected-multiline": "error",                                                             // recommended
        "no-unmodified-loop-condition": "error",
        "no-unreachable": "error",                                                                      // recommended
        "no-unreachable-loop": "error",
        "no-unsafe-finally": "error",                                                                   // recommended
        "no-unsafe-negation": "error",                                                                  // recommended
        "no-unsafe-optional-chaining": ["error", {"disallowArithmeticOperators": true}],                // recommended
        "no-unused-private-class-members": "warn",
        // "no-unused-vars": ["warn", {"args": "none"}], EXTENDED                                       // recommended
        // "no-use-before-define": "warn", EXTENDED
        "no-useless-backreference": "warn",                                                             // recommended
        "require-atomic-updates": "warn",
        "use-isnan": "error",                                                                           // recommended
        "valid-typeof": "error",                                                                        // recommended

        /**
         * eslint
         * @description: rules suggesting alternate ways of doing things
         * @see: https://eslint.org/docs/latest/rules/#suggestions
         */

        "accessor-pairs": "warn",
        "arrow-body-style": "warn",
        "block-scoped-var": "error",
        // "camelcase": "warn",
        // "capitalized-comments": "warn",
        // "class-methods-use-this": "warn", EXTENDED
        // "complexity": "[warn, 2]",
        // "consistent-return": "warn",
        // "consistent-this": "warn",
        "curly": "error",
        // "default-case": "warn",
        "default-case-last": "error",
        // "default-param-last": "error", EXTENDED
        // "dot-notation": "error", EXTENDED
        "eqeqeq": ["error", "always", {"null": "ignore"}],
        // "func-name-matching": "warn",
        // "func-names": "warn",
        // "func-style": "warn",
        "grouped-accessor-pairs": ["warn", "getBeforeSet"],
        "guard-for-in": "error",
        // "id-denylist": ["error", "data", "callback"],
        // "id-length": "error",
        // "id-match": ["error", "^[a-z]+([A-Z][a-z]+)*$"],
        // "init-declarations": "warn", EXTENDED
        // "logical-assignment-operators": "warn",
        // "max-classes-per-file": "warn",
        // "max-depth": "warn",
        // "max-lines": "warn",
        // "max-lines-per-function": "warn",
        // "max-nested-callbacks": "warn",
        // "max-params": "warn",
        // "max-statements": "warn",
        // "multiline-comment-style": "warn",
        // "new-cap": "warn",
        "no-alert": "error",
        // "no-array-constructor": "error", EXTENDED
        // "no-bitwise": "error",
        "no-caller": "error",
        "no-case-declarations": "error",                                                                // recommended
        // "no-confusing-arrow": "error",
        // "no-console": "error",
        // "no-continue": "error",
        "no-delete-var": "error",                                                                       // recommended
        // "no-div-regex": "warn",
        "no-else-return": ["error", {"allowElseIf": false}],
        // "no-empty": "error",                                                                         // recommended
        // "no-empty-function": "error", EXTENDED
        // "no-empty-static-block": "error",
        // "no-eq-null": "error",
        "no-eval": "error",
        // "no-extend-native": "error",
        "no-extra-bind": "error",
        "no-extra-boolean-cast": "error",                                                               // recommended
        "no-extra-label": "error",
        // "no-extra-semi": "error", EXTENDED                                                           // recommended
        "no-floating-decimal": "error",
        "no-global-assign": "error",                                                                    // recommended
        "no-implicit-coercion": ["error", { "allow": ["!!", "+"] }],
        // "no-implicit-globals": "error",
        // "no-implied-eval": "error", EXTENDED
        // "no-inline-comments": "warn",
        // "no-invalid-this": "warn", EXTENDED
        "no-iterator": "error",
        "no-label-var": "error",
        // "no-labels": "error",
        // "no-lone-blocks": "error",
        "no-lonely-if": "warn",
        // "no-loop-func": "warn", EXTENDED
        // "no-magic-numbers": "warn", EXTENDED
        // "no-mixed-operators": "error",
        // "no-multi-assign": "error",
        "no-multi-str": "error",
        // "no-negated-condition": "warn",
        // "no-nested-ternary": "warn",
        "no-new": "error",
        "no-new-func": "error",
        "no-new-object": "error",
        "no-new-wrappers": "error",
        "no-nonoctal-decimal-escape": "error",                                                          // recommended
        "no-octal": "error",                                                                            // recommended
        "no-octal-escape": "error",
        // "no-param-reassign": "error",
        // "no-plusplus": "error",
        "no-proto": "error",
        // "no-redeclare": "warn", EXTENDED                                                             // recommended
        "no-regex-spaces": "warn",                                                                      // recommended
        // "no-restricted-exports": "error",
        // "no-restricted-globals": "error",
        // "no-restricted-imports": ["error", "forbidden"], EXTENDED
        // "no-restricted-properties": "warn",
        // "no-restricted-syntax": "error",
        "no-return-assign": "error",
        "no-script-url": "error",
        // "no-sequences": "error",
        // "no-shadow": "warn", EXTENDED
        "no-shadow-restricted-names": "error",                                                          // recommended
        // "no-ternary": "error",
        // "no-throw-literal": "warn", EXTENDED
        "no-undef-init": "error",
        // "no-undefined": "error",
        // "no-underscore-dangle": "error",
        "no-unneeded-ternary": "warn",
        // "no-unused-expressions": "warn", EXTENDED
        "no-unused-labels": "error",                                                                    // recommended
        // "no-useless-call": "error",
        "no-useless-catch": "error",                                                                    // recommended
        "no-useless-computed-key": "warn",
        "no-useless-concat": "warn",
        // "no-useless-constructor": "warn", EXTENDED
        "no-useless-escape": "warn",                                                                    // recommended
        "no-useless-rename": "error",
        "no-useless-return": "error",
        "no-var": "error",
        // "no-void": "error",
        // "no-warning-comments": "error",
        "no-with": "error",                                                                             // recommended
        // "object-shorthand": "error",
        // "one-var": "error",
        // "one-var-declaration-per-line": "error",
        // "operator-assignment": "error",
        // "prefer-arrow-callback": "error",
        "prefer-const": "warn",
        // "prefer-destructuring": "warn",
        // "prefer-exponentiation-operator": "warn",
        // "prefer-named-capture-group": "warn",
        // "prefer-numeric-literals": "warn",
        // "prefer-object-has-own": "warn",
        // "prefer-object-spread": "warn",
        "prefer-promise-reject-errors": "warn",
        // "prefer-regex-literals": "warn",
        "prefer-rest-params": "warn",
        "prefer-spread": "warn",
        // "prefer-template": "warn",
        "quote-props": ["warn", "as-needed"],
        // "radix": "warn",
        // "require-await": "error", EXTENDED
        // "require-unicode-regexp": "error",
        "require-yield": "error",                                                                       // recommended
        // "sort-imports": "warn",
        // "sort-keys": "warn",
        // "sort-vars": "warn",
        // "spaced-comment": "warn",
        // "strict": "error",
        // "symbol-description": "warn",
        // "vars-on-top": "warn",
        "yoda": ["warn", "never", {"exceptRange": true}],

        /**
         * eslint
         * @description: rules caring about how the code looks rather than how it executes
         * @see: https://eslint.org/docs/latest/rules/#layout--formatting
         */

        // "array-bracket-newline": "warn",
        "array-bracket-spacing": "warn",
        // "array-element-newline": "warn",
        "arrow-parens": ["warn", "as-needed"],
        "arrow-spacing": "warn",
        // "block-spacing": "warn", EXTENDED
        // "brace-style": "warn", EXTENDED
        // "comma-dangle": "warn", EXTENDED
        // "comma-spacing": "warn", EXTENDED
        "comma-style": "warn",
        "computed-property-spacing": "warn",
        "dot-location": ["warn", "property"],
        "eol-last": "warn",
        // "func-call-spacing": "warn", EXTENDED
        // "function-call-argument-newline": "warn",
        // "function-paren-newline": "warn",
        // "generator-star-spacing": "warn",
        // "implicit-arrow-linebreak": "warn",
        // "indent": "warn", EXTENDED
        // "jsx-quotes": "warn",
        // "key-spacing": "warn", EXTENDED
        // "keyword-spacing": "warn", EXTENDED
        // "line-comment-position": "warn",
        "linebreak-style": "warn",
        // "lines-around-comment" : "warn", EXTENDED
        // "lines-between-class-members": "warn", EXTENDED
        // "max-len": "warn",
        // "max-statements-per-line": "warn",
        // "multiline-ternary": "warn",
        "new-parens": "warn",
        // "newline-per-chained-call": "warn",
        // "no-extra-parens": "warn",
        "no-mixed-spaces-and-tabs": "error",                                                            // recommended
        // "no-multi-spaces": "warn",
        // "no-multiple-empty-lines": "warn",
        "no-tabs": "error",
        // "no-trailing-spaces": "warn", REMARK: USE TRAILING SPACES EXTENSION
        "no-whitespace-before-property": "warn",
        // "nonblock-statement-body-position": "warn",
        // "object-curly-newline": "warn",
        // "object-curly-spacing": "warn", EXTENDED
        // "object-property-newline": "warn",
        // "operator-linebreak": "warn",
        // "padded-blocks": "warn",
        // "padding-line-between-statements": "warn", EXTENDED
        // "quotes": ["warn", "single"], EXTENDED
        "rest-spread-spacing": "warn",
        // "semi": "warn", EXTENDED
        "semi-spacing": "warn",
        "semi-style": "warn",
        // "space-before-blocks": "warn", EXTENDED
        // "space-before-function-paren": ["warn", "never"], EXTENDED
        "space-in-parens": "warn",
        // "space-infix-ops": "warn", EXTENDED
        "space-unary-ops": "warn",
        "switch-colon-spacing": "warn",
        "template-curly-spacing": "warn",
        "template-tag-spacing": "warn",
        "unicode-bom": "error",
        "wrap-iife": "warn",
        // "wrap-regex": "warn",
        // "yield-star-spacing": "warn",

        /**
         * last
         * @description: dummy rule, to avoid dealing with trailing commas above
         */

        "": "off"
    }
}
